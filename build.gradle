buildscript {
    ext.kotlin_version = '1.3.61'

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath("com.github.jengelman.gradle.plugins:shadow:5.2.0")
    }
}

plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"

    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "com.github.ben-manes.versions" version "0.27.0"
}
apply plugin: 'kotlinx-serialization'

repositories {
    jcenter()
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("org.jetbrains.kotlin:kotlin-compiler-embeddable")
    implementation("org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable")
    implementation("org.jetbrains.kotlin:kotlin-script-util")
    implementation("org.jetbrains.kotlin:kotlin-script-runtime")

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0")
    implementation("com.charleskorn.kaml:kaml:0.15.0")

    implementation("org.beryx:text-io:3.4.0")
    implementation("com.squareup.okhttp3:okhttp:3.14.4")

    implementation("net.swiftzer.semver:semver:1.1.1")
    implementation("com.github.ajalt:clikt:2.3.0")
    implementation("org.eclipse.jgit:org.eclipse.jgit:5.6.0.201912101111-r")
    implementation("org.kohsuke:github-api:1.101")

    implementation("org.slf4j:slf4j-nop:1.7.25")
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
    }
}

sourceSets {
    getByName("main") {
        resources.srcDirs("res")
    }
}

jar {
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) })
}
application {
    mainClassName = "com.jonaswanke.unicorn.console.MainKt"
}
distributions {
    main {
        contents {
            into('templates') {
                from 'templates'
            }
        }
    }
}

task actionShadowJar(type: Jar, dependsOn: shadowJar) {
    manifest {
        attributes["Main-Class"] = "com.jonaswanke.unicorn.action.MainKt"
    }
    from zipTree(shadowJar.archivePath)
}
